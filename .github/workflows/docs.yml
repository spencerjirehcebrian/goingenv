name: Documentation

on:
  push:
    branches: [main, develop]
    paths:
      - '**.md'
      - 'docs/**'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - '**.md'
      - 'docs/**'
      - '.github/workflows/docs.yml'

permissions:
  contents: read
  pull-requests: write

jobs:
  lint-markdown:
    name: Lint Markdown
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Basic markdown check
      run: |
        echo "Checking markdown files exist..."
        ls -la *.md
        echo "‚úÖ Markdown files found"

  check-links:
    name: Check Links
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Basic link check
      run: |
        echo "Basic link existence check..."
        grep -r "http" *.md || echo "No external links found"
        echo "‚úÖ Basic link check completed"


  validate-install-script:
    name: Validate Install Script
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate install script syntax
      run: |
        echo "Validating install script..."
        
        if [[ -f "install.sh" ]]; then
          # Check syntax
          bash -n install.sh
          echo "‚úÖ Install script syntax is valid"
          
          # Test help function
          ./install.sh --help > /dev/null
          echo "‚úÖ Install script help works"
          
          # Test dry run
          echo "Testing dry run..."
          DEBUG=1 NO_SUDO=1 SKIP_SHELL_INTEGRATION=1 ./install.sh --version v999.999.999 2>/dev/null || true
          echo "‚úÖ Install script dry run completed"
        else
          echo "‚ö†Ô∏è No install script found"
        fi

  check-documentation-completeness:
    name: Check Documentation Completeness
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check required documentation files
      run: |
        echo "Checking documentation completeness..."
        
        required_files=(
          "README.md"
        )
        
        missing_files=()
        
        for file in "${required_files[@]}"; do
          if [[ -f "$file" ]]; then
            echo "‚úÖ $file exists"
            
            # Check if file is not empty
            if [[ ! -s "$file" ]]; then
              echo "‚ö†Ô∏è $file is empty"
            fi
          else
            echo "‚ùå $file is missing"
            missing_files+=("$file")
          fi
        done
        
        if [[ ${#missing_files[@]} -gt 0 ]]; then
          echo ""
          echo "Missing documentation files:"
          printf '  - %s\n' "${missing_files[@]}"
          exit 1
        fi
        
        echo "‚úÖ All required documentation files are present"

    - name: Check README structure
      run: |
        echo "Checking README structure..."
        
        required_sections=(
          "# GoingEnv"
          "## üöÄ Quick Start"
          "## ‚ú® Key Features"
          "## üìñ Documentation"
        )
        
        missing_sections=()
        
        for section in "${required_sections[@]}"; do
          if grep -q "^$section" README.md; then
            echo "‚úÖ Section found: $section"
          else
            echo "‚ùå Section missing: $section"
            missing_sections+=("$section")
          fi
        done
        
        if [[ ${#missing_sections[@]} -gt 0 ]]; then
          echo ""
          echo "Missing README sections:"
          printf '  - %s\n' "${missing_sections[@]}"
          exit 1
        fi
        
        echo "‚úÖ README structure is complete"

  success:
    name: Documentation Checks Passed
    runs-on: ubuntu-latest
    needs: [lint-markdown, check-links, validate-install-script, check-documentation-completeness]
    if: success()
    steps:
    - name: Success notification
      run: |
        echo "üéâ All documentation checks passed!"
        echo ""
        echo "‚úÖ Markdown linting"
        echo "‚úÖ Link checking"
        echo "‚úÖ Install script validation"
        echo "‚úÖ Documentation completeness"